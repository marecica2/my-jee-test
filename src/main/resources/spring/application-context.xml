<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<context:property-placeholder location="classpath:application.properties" />
	<context:component-scan base-package="org.bmsource" >
      <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>


	<bean id="emfBase" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" abstract="true">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
	            <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQL9Dialect" />
	            <property name="showSql" value="false" />
	            <property name="generateDdl" value="true" />				
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.CMTTransactionFactory</prop>
				<prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- JPA A -->
	<bean id="emfA" parent="emfBase">
		<property name="dataSource" ref="dataSourceA" />
		<property name="persistenceUnitName" value="emfA" />
		<property name="packagesToScan" value="org.bmsource.model.a" />
	</bean>
	<bean id="dataSourceA" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<property name="testQuery" value="select 1" />
		<property name="uniqueResourceName" value="XADBMSA" />
		<property name="xaDataSourceClassName" value="org.postgresql.xa.PGXADataSource" />
		<property name="xaProperties">
			<props>
	            <prop key="databaseName">my-jee-test</prop>
	            <prop key="serverName">localhost</prop>
	            <prop key="portNumber">6433</prop>
	            <prop key="user">postgres</prop>
	            <prop key="password">postgres</prop>
			</props>
		</property>
		<property name="poolSize" value="2" />
	</bean>	
	
  
    
	<!-- JPA B -->
	<bean id="emfB" parent="emfBase">
		<property name="dataSource" ref="dataSourceB" />
		<property name="persistenceUnitName" value="emfB" />
		<property name="packagesToScan" value="org.bmsource.model.b" />
	</bean>
	<bean id="dataSourceB" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<property name="testQuery" value="select 1" />
		<property name="uniqueResourceName" value="XADBMSB" />
		<property name="xaDataSourceClassName" value="org.postgresql.xa.PGXADataSource" />
		<property name="xaProperties">
			<props>
            <prop key="databaseName">my-jee-test-b</prop>
            <prop key="serverName">localhost</prop>
            <prop key="portNumber">6433</prop>
            <prop key="user">postgres</prop>
            <prop key="password">postgres</prop>
			</props>
		</property>
		<property name="poolSize" value="2" />
	</bean>	
	

    <!-- Transactions -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
        init-method="init" destroy-method="close">
        <property name="forceShutdown" value="false" />
        <property name="transactionTimeout" value="300" />
    </bean>
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
    </bean>
    <tx:annotation-driven  transaction-manager="transactionManager"/>

	<import resource="security-context.xml"/>
</beans>
